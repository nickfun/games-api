swagger: "2.0"
info:
  description: "A simple server that knows my Video Game collection"
  version: "1.0.0"
  title: "game-collection-api"
  termsOfService: "http://nick.gs/"
  contact:
    email: "nick@nick.gs"
  license:
    name: "Apache 2.0"
    url: "http://www.apache.org/licenses/LICENSE-2.0.html"
host: "games.nick.gs"
basePath: "/v1"
tags:
- name: "games"
  description: "Operations on Games"
- name: "systems"
  description: "Operations on Game Consoles"
schemes:
- "https"
- "http"
externalDocs:
  description: "Find out more about Swagger"
  url: "http://swagger.io"
paths:
  /games:
    post:
      tags:
      - "games"
      summary: "Add a new video game"
      description: ""
      operationId: "addGame"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "newGame"
        description: "Name of video game"
        required: true
        schema:
          $ref: "#/definitions/Game"
      responses:
        422:
          description: "Invalid input"
          schema:
            type: "string"
        200:
          description: "successful operation"
          schema:
            $ref: "#/definitions/Game"
    get:
      tags:
      - "games"
      summary: "view all known games"
      description: ""
      operationId: "getGameList"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      responses:
        500:
          description: "Database error"
        200:
          description: "successful operation"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/Game"
  /games/{gameId}:
    get:
      tags:
      - "games"
      summary: "View one game"
      description: ""
      operationId: "getGameById"
      produces:
      - "application/json"
      parameters:
      - name: "gameId"
        in: "path"
        description: ""
        required: true
        type: "integer"
        format: "int32"
      responses:
        200:
          description: "successful operation"
          schema:
            $ref: "#/definitions/Game"
        404:
          description: "Invalid gameId value"
  /systems/{systemId}:
    get:
      tags:
      - "systems"
      summary: "Get a single System"
      operationId: "getSystemById"
      produces:
      - "application/json"
      consumes:
      - "application/json"
      parameters:
      - name: "systemId"
        in: "path"
        type: "integer"
        format: "int32"
        required: true
      responses:
        200:
          description: "successful operation"
          schema:
            $ref: "#/definitions/System"
        404:
          description: "system not found"
  /systems:
    get:
      tags:
      - "systems"
      summary: "view all systems"
      operationId: "getSystemList"
      produces:
      - "application/json"
      consumes:
      - "application/json"
      responses:
        200:
          description: "successful operation"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/System"
    post:
      tags:
      - "systems"
      summary: "add a system"
      operationId: "addSystem"
      produces:
      - "application/json"
      consumes:
      - "application/json"
      parameters:
      - in: "body"
        name: "newSystem"
        description: "Describe the new system"
        required: true
        schema:
          $ref: "#/definitions/System"
      responses:
        200:
          description: "successfull operation"
          schema:
            $ref: "#/definitions/System"
        422:
          description: "invalid input"
securityDefinitions:
  petstore_auth:
    type: "oauth2"
    authorizationUrl: "http://petstore.swagger.io/oauth/dialog"
    flow: "implicit"
    scopes:
      write:pets: "modify pets in your account"
      read:pets: "read your pets"
  api_key:
    type: "apiKey"
    name: "api_key"
    in: "header"
definitions:
  Game:
    type: "object"
    required:
    - "id"
    - "name"
    - "system_id"
    properties:
      id:
        type: "integer"
        format: "int32"
      system_id:
        type: "integer"
        format: "int32"
      name:
        type: "string"
      release_date:
        type: "string"
        #format: "date"
  System:
    type: "object"
    required:
    - "id"
    - "name"
    - "company"
    properties:
      id:
        type: "integer"
        format: "int32"
      name:
        type: "string"
      company:
        type: "string"
      release_date:
        type: "string"
        #format: "date"
