swagger: "2.0"
info:
  description: "Todo Backend API"
  version: "1.0.0"
  title: "Todos API"
  termsOfService: "http://nick.gs/"
  contact:
    email: "nick@nick.gs"
  license:
    name: "GPL"
    url: "http://www.fsf.org"
host: "todos.nick.gs"
tags:
- name: "todos"
  description: "Manipluation of Todos"
schemes:
- "https"
- "http"
externalDocs:
  description: "Learn the Birds API"
  url: "http://birds.nick.gs"
paths:
  /todos:
    post:
      tags:
      - "todos"
      summary: "Add a new todo"
      description: ""
      operationId: "addTodo"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "newTodo"
        description: "Todo Object"
        required: true
        schema:
          $ref: "#/definitions/Todo"
      responses:
        400:
          description: "Invalid input"
          schema:
            type: "string"
        200:
          description: "successful operation"
          schema:
            $ref: "#/definitions/Todo"
    get:
      tags:
      - "todos"
      summary: "view all known Todos"
      description: ""
      operationId: "getTodoList"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      responses:
        500:
          description: "Database error"
        200:
          description: "successful operation"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/Todo"
  /todos/{todoId}:
    get:
      tags:
      - "todos"
      summary: "Details of one Todo"
      description: ""
      operationId: "getTodoById"
      produces:
      - "application/json"
      parameters:
      - name: "todoId"
        in: "path"
        description: ""
        required: true
        type: "string"
      responses:
        200:
          description: "successful operation"
          schema:
            $ref: "#/definitions/Todo"
        404:
          description: "Invalid Todo ID value"
    patch:
      tags:
      - "todos"
      summary: "Update an existing Todo"
      description: ""
      operationId: "updateTodoById"
      produces:
      - "application/json"
      consumes:
      - "application/json"
      parameters:
      - name: "todoId"
        in: "path"
        description: ""
        required: true
        type: "string"
      - in: "body"
        name: "newTodo"
        description: "Todo Object"
        required: true
        schema:
          $ref: "#/definitions/Todo"
      responses:
        200:
          description: "successful operation"
          schema:
            $ref: "#/definitions/Todo"
        404:
          description: "Todo not found"

definitions:
  Todo:
    type: "object"
    required:
    - "title"
    properties:
      id:
        type: "string"
      title:
        type: "string"
      order:
        type: "integer"
        format: "int32"
      completed:
        type: "boolean"
      url:
        type: "string"
